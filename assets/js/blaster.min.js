/*
BlasterJS is a free to use, open source BioJS component to display
BLAST alignments created by SING Group.
Copyright (C) 2016  SING - Sistemas Informaticos de Nueva Generacion

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
require = function a(b, c, d) {
    function e(g, h) {
        if (!c[g]) {
            if (!b[g]) {
                var i = "function" == typeof require && require;
                if (!h && i) return i(g, !0);
                if (f) return f(g, !0);
                var j = new Error("Cannot find module '" + g + "'");
                throw j.code = "MODULE_NOT_FOUND", j
            }
            var k = c[g] = {
                exports: {}
            };
            b[g][0].call(k.exports, function(a) {
                var c = b[g][1][a];
                return e(c ? c : a)
            }, k, k.exports, a, b, c, d)
        }
        return c[g].exports
    }
    for (var f = "function" == typeof require && require, g = 0; g < d.length; g++) e(d[g]);
    return e
}({
    1: [function(a, b, c) {
        (function(a) {
            function c(a, b, c) {
                for (; b && b !== Object.prototype && (Object.getOwnPropertyNames(b).forEach(function(c) {
                        if (".class" != c && !a.hasOwnProperty(c)) {
                            var d = Object.getOwnPropertyDescriptor(b, c);
                            Object.defineProperty(a, c, d)
                        }
                    }), !c);) b = b.__proto__;
                return a
            }

            function e(a, b) {
                for (; a;) {
                    if (a.type.prototype === b.prototype) return !0;
                    for (var c in a.implements) {
                        var d = a.implements[c],
                            f = d[".class.meta"];
                        if (f) {
                            if (e(f, b)) return !0
                        } else
                            for (var g = d.prototype; g; g = g.__proto__)
                                if (g === b.prototype) return !0
                    }
                    a = a.base ? a.base[".class.meta"] : void 0
                }
                return !1
            }
            var d = function(a, b, c) {
                "function" != typeof a && (c = b, b = a, a = Object), b || (b = {}), c || (c = {});
                var e = {
                        name: c.name,
                        base: a,
                        implements: []
                    },
                    f = d.clone(b);
                c.implements && (Array.isArray(c.implements) ? c.implements : [c.implements]).forEach(function(a) {
                    "function" == typeof a && a.prototype && (e.implements.push(a), d.extend(f, a.prototype))
                }), f.__proto__ = a.prototype;
                var g = function() {
                    "function" == typeof this.constructor && this.constructor.apply(this, arguments)
                };
                return e.type = g, g.prototype = f, Object.defineProperty(g, ".class.meta", {
                    value: e,
                    enumerable: !1,
                    configurable: !1,
                    writable: !1
                }), Object.defineProperty(f, ".class", {
                    value: g,
                    enumerable: !1,
                    configurable: !1,
                    writable: !1
                }), c.statics && d.extend(g, c.statics), g
            };
            d.extend = c, d.clone = function(a) {
                return c({}, a)
            };
            var f = d({
                constructor: function(a) {
                    this.object = a
                },
                typeOf: function(a) {
                    if (this.object instanceof a) return !0;
                    var b = d.typeInfo(this.object);
                    return b && e(b, a)
                }
            });
            f.prototype.a = f.prototype.typeOf, f.prototype.an = f.prototype.typeOf, d.is = function(a) {
                return new f(a)
            }, d.typeInfo = function(a) {
                var b = a.__proto__[".class"];
                return b ? b[".class.meta"] : void 0
            }, d.VERSION = [0, 0, 2], b ? b.exports = d : a.Class = d
        }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }, {}],
    2: [function(a, b, c) {
        (function(a) {
            a("object" == typeof c ? c : this)
        }).call(this, function(a) {
            var b = Array.prototype.slice,
                c = Array.prototype.forEach,
                d = function(a) {
                    if ("object" != typeof a) throw a + " is not an object";
                    var e = b.call(arguments, 1);
                    return c.call(e, function(b) {
                        if (b)
                            for (var c in b) "object" == typeof b[c] && a[c] ? d.call(a, a[c], b[c]) : a[c] = b[c]
                    }), a
                };
            a.extend = d
        })
    }, {}],
    "biojs-vis-blasterjs": [function(a, b, c) {
        var d, e = a("js-class");
        b.exports = d = e({
            constructor: function(b) {
                var c = this;
                a("js-extend").extend(this.opt, b);
                var d = "table tbody tr td button:hover{ text-decoration: underline;}",
                    e = document.createElement("style");
                if (e.styleSheet ? e.styleSheet.cssText = d : e.appendChild(document.createTextNode(d)), document.getElementsByTagName("head")[0].appendChild(e), c.opt.string) {
                    var f = new Blob([c.opt.string], {
                            type: "text/plain"
                        }),
                        g = {
                            target: {
                                files: [f]
                            }
                        };
                    c._displayAlignments(g, c)
                } else document.getElementById(c.opt.input).addEventListener("change", function(a) {
                    c._displayAlignments(a, c)
                }, !1)
            },
            opt: {
                input: "blastinput",
                multipleAlignments: "blast-multiple-alignments",
                alignmentsTable: "blast-alignments-table",
                singleAlignment: "blast-single-alignment",
                biodb: "chlamydia_04_16"
            },
            _displayAlignments: function(a, b) {
                function e(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
                    this.description = a, this.length = b, this.score = c, this.eValue = d, this.identities = e, this.positives = f, this.gaps = g, this.queryStart = h, this.query = i, this.queryEnd = j, this.comparison = k, this.subjectStart = l, this.subject = m, this.subjectEnd = n
                }

                function f(a) {
                    for (var b = a.split("\n"), c = 0, d = 0; d < b.length; d++)
                        if (b[d].startsWith("Length=")) {
                            c = b[d].split("=")[1];
                            break
                        }
                    return c
                }

                function g(a) {
                    a.split("\n");
                    return h(a)
                }

                function h(a) {
                    for (var b = a.split("\n"), c = [], d = 0; d < b.length; d++)
                        if (b[d].startsWith(">")) {
                            for (var f = b[d].split(">")[1], g = "", h = d;
                                "" == g;) h += 1, b[h].startsWith("Length=") ? g = b[h] : f += b[h];
                            var i = f,
                                j = g.split("=")[1];
                            b[h + 2].startsWith(" Features in this part of subject sequence:") && (h += 3);
                            var k = b[h + 2].split(",")[0].split(" ")[3],
                                l = b[h + 2].split(",")[1].split(" ")[4],
                                m = b[h + 3].split(",")[0].split("(")[1].substr(0, b[h + 3].split(",")[0].split("(")[1].length - 2);
                            if (b[0].startsWith("BLASTN")) var n = "N/A",
                                o = b[h + 3].split(",")[1].split("(")[1].substr(0, b[h + 3].split(",")[1].split("(")[1].length - 2);
                            else var n = b[h + 3].split(",")[1].split("(")[1].substr(0, b[h + 3].split(",")[1].split("(")[1].length - 2),
                                o = b[h + 3].split(",")[2].split("(")[1].substr(0, b[h + 3].split(",")[2].split("(")[1].length - 2);
                            ("Frame" == b[h + 4].split(",")[0].split(" ")[1] || b[h + 4].startsWith(" Strand")) && (h += 1);
                            var p = b[h + 5].substring(5).replace(/^\s+/g, "").split(" ")[0],
                                q = b[h + 5].substring(5).replace(/\s+/g, "").replace(/[0-9]/g, ""),
                                r = b[h + 5].substring(5).replace(/^\s+/g, "").split(" ")[b[h + 5].substring(5).replace(/^\s+/g, "").split(" ").length - 1],
                                s = b[h + 6].replace(/^\s+/g, ""),
                                t = b[h + 7].substring(5).replace(/^\s+/g, "").split(" ")[0],
                                u = b[h + 7].substring(5).replace(/\s+/g, "").replace(/[0-9]/g, ""),
                                v = b[h + 7].substring(5).replace(/^\s+/g, "").split(" ")[b[h + 7].substring(5).replace(/^\s+/g, "").split(" ").length - 1];
                            for (h += 9; b[h].startsWith("Query");) {
                                var w = b[h].substring(5).replace(/\s+/g, "").replace(/[0-9]/g, "");
                                q += w, r = b[h].substring(5).replace(/^\s+/g, "").split(" ")[b[h].substring(5).replace(/^\s+/g, "").split(" ").length - 1], u += b[h + 2].substring(5).replace(/\s+/g, "").replace(/[0-9]/g, ""), v = b[h + 2].substring(5).replace(/^\s+/g, "").split(" ")[b[h + 2].substring(5).replace(/^\s+/g, "").split(" ").length - 1];
                                var x = b[h + 1].replace(/^\s+/g, "");
                                if (w.length > x.length)
                                    for (var y = w.length - x.length, z = 0; z < y; z++) x = " " + x;
                                s += x, h += 4
                            }
                            var A = new e(i, j, k, l, m, n, o, p, q, r, s, t, u, v);
                            c.push(A)
                        }
                    return c
                }

                function i(a, b) {
                    return b < 40 ? k(a, 1) : b >= 40 || b < 50 ? k(a, 2) : b >= 50 || b < 80 ? k(a, 3) : b >= 80 || b < 200 ? k(a, 4) : k(a, 5)
                }

                function j(a) {
                    switch (a) {
                        case 1:
                            return "<40";
                        case 2:
                            return "40-50";
                        case 3:
                            return "50-80";
                        case 4:
                            return "80-200";
                        case 5:
                            return ">=200";
                        default:
                            return "0"
                    }
                }

                function k(a, b) {
                    if (a) switch (b) {
                        case 1:
                            return "#5C6D7E";
                        case 2:
                            return "#9B59B6";
                        case 3:
                            return "#5CACE2";
                        case 4:
                            return "#57D68D";
                        case 5:
                            return "#C0392B";
                        default:
                            return "#FFF"
                    } else switch (b) {
                        case 1:
                            return "#BCBCBC";
                        case 2:
                            return "#989898";
                        case 3:
                            return "#747474";
                        case 4:
                            return "#565656";
                        case 5:
                            return "#343434";
                        default:
                            return "#FFF"
                    }
                }

                function l(a, b, c, d) {
                    var e = document.createElement("div"),
                        f = document.createElement("div"),
                        g = document.createElement("div"),
                        h = document.createElement("div"),
                        i = document.createElement("a");
                    return e.style.minHeight = "12px", f.style.width = b + "px", f.style.minHeight = "4px", f.style.float = "left", g.style.width = c + "px", g.style.minHeight = "12px", g.style.float = "left", g.style.backgroundColor = a, g.onmouseout = function() {
                        document.getElementById("defline").value = " Mouse over to show defline and scores, click to show alignments"
                    }, g.onmouseover = function() {
                        document.getElementById("defline").value = " " + d.description + ". S=" + d.score + " E=" + d.eValue
                    }, h.style.clear = "both", i.href = "#" + d.description.split(" ")[1], i.onclick = function() {
                        m(d.description.split(" ")[1])
                    }, i.appendChild(g), e.appendChild(f), e.appendChild(i), e.appendChild(h), e
                }

                function m(a) {
                    var d, b = document.getElementById(a).parentElement.parentElement,
                        c = document.getElementsByClassName("alignment-table-description");
                    for (d = 0; d < c.length; d++) c[d].style.fontWeight = "normal", c[d].parentElement.parentElement.style.fontWeight = "normal";
                    b.style.fontWeight = "bold", document.getElementById(a).style.fontWeight = "bold"
                }

                function n(a) {
                    var b = document.createElement("div"),
                        c = document.createElement("div"),
                        d = document.createElement("div");
                    b.style.color = "#EEE", c.style.minWidth = "50px", c.style.minHeight = "10px", c.style.float = "left", b.appendChild(c);
                    for (var e = 1; e <= 5; e++) {
                        var f = document.createElement("div");
                        f.style.minWidth = "100px", f.style.textAlign = "center", f.style.float = "left", f.innerHTML = j(e).bold(), f.style.backgroundColor = k(a, e), b.appendChild(f)
                    }
                    return d.style.clear = "both", b.appendChild(d), b
                }

                function o(a) {
                    var b = document.createElement("div"),
                        c = document.createElement("div"),
                        d = document.createElement("div"),
                        e = document.createElement("div");
                    return b.style.marginTop = "3px", b.style.color = "#5C6D7E", b.style.fontSize = "10px", c.style.width = "50px", c.innerHTML = "QUERY".bold(), c.style.float = "left", d.style.width = "500px", d.style.height = "10px", d.style.float = "left", d.style.marginTop = "2px", e.style.clear = "both", a ? d.style.backgroundColor = "#C0392B" : d.style.backgroundColor = "#343434", b.appendChild(c), b.appendChild(d), b.appendChild(e), b
                }

                function p(a) {
                    var b = document.createElement("div"),
                        c = document.createElement("div"),
                        d = document.createElement("div"),
                        e = document.createElement("div");
                    return b.style.marginBottom = "5px", b.style.fontSize = "11px", c.style.minWidth = "50px", c.style.minHeight = "10px", c.style.float = "left", d.style.float = "left", e.style.clear = "both", d = q(d, a), b.appendChild(c), b.appendChild(d), b.appendChild(e), b
                }

                function q(a, b) {
                    var c = document.createElement("div");
                    if (b > 4)
                        if (b % 5 == 0) a = r(a, 5, b / 5, 100);
                        else {
                            var d = 500 / (5 + b % 5 / 5);
                            a = r(a, 5, parseInt(b / 5), parseInt(d));
                            var e = parseInt(500 - 5 * d),
                                f = document.createElement("div");
                            f.style.float = "left", f.style.width = e + "px", f.style.textAlign = "right", f.innerHTML = b, a.appendChild(f)
                        }
                    else a = r(a, b, 1, parseInt(500 / b));
                    return c.style.clear = "both", a.appendChild(c), a
                }

                function r(a, b, c, d) {
                    for (var e = 0; e < b; e++)
                        if (0 == e) {
                            var f = d / 2,
                                g = document.createElement("div"),
                                h = document.createElement("div");
                            g.style.float = "left", g.style.width = f + "px", g.style.textAlign = "left", g.innerHTML = "0", h.style.float = "left", h.style.width = f + "px", h.style.textAlign = "right", h.innerHTML = c * (e + 1), a.appendChild(g), a.appendChild(h)
                        } else {
                            var i = document.createElement("div");
                            i.style.float = "left", i.style.width = d + "px", i.style.textAlign = "right", i.innerHTML = c * (e + 1), a.appendChild(i)
                        }
                    return a
                }

                function s(a, b, c) {
                    var d = document.createElement("div"),
                        e = n(b),
                        f = o(b),
                        g = p(c);
                    return d.style.color = "#5C6D7E", d.style.textAlign = "center", d.style.paddingBottom = "5px", d.innerHTML = "COLOR KEY FOR ALIGNMENT SCORES".bold(), a.appendChild(d), a.appendChild(e), a.appendChild(f), a.appendChild(g), a
                }

                function t(a, b, c, d) {
                    var e = document.createElement("div");
                    e.style.paddingBottom = "10px";
                    for (var f = 0; f < a.length; f++) {
                        if (parseInt(a[f].queryStart) > parseInt(a[f].queryEnd)) var g = a[f].queryEnd,
                            h = a[f].queryStart;
                        else var g = a[f].queryStart,
                            h = a[f].queryEnd;
                        var j = parseInt(50 + 500 * (g - 1) / b),
                            k = parseInt(550 - j - 500 * (b - h) / b),
                            m = l(i(d, a[f].score), j, k, a[f]);
                        m.style.marginBottom = "4px", e.appendChild(m)
                    }
                    return c.appendChild(e), c
                }

                function u(a, b, c, d) {
                    var e = document.createElement("button");
                    if (e.id = "changeColors", e.className = "btn", e.style.marginRight = "10px", e.style.marginTop = "5px", 1 == c) var f = document.createTextNode("Click to change colors to grayscale");
                    else var f = document.createTextNode("Click to change colors to full colored");
                    return e.appendChild(f), e.onclick = function() {
                        w(a, b, e, c, d)
                    }, e
                }

                function v() {
                    var a = document.createElement("button");
                    a.id = "downloadAlignments", a.className = "btn", a.style.marginTop = "5px";
                    var b = document.createTextNode("Download as image");
                    return a.appendChild(b), a.addEventListener("click", x), a
                }

                function w(a, b, c, d, e) {
                    d = 1 != d, c.removeChild(c.childNodes[0]);
                    for (var f = document.getElementById(e.opt.multipleAlignments); f.firstChild;) f.removeChild(f.firstChild);
                    y(a, b, d, e)
                }

                function x() {
                    var a = document.getElementById("blast-multiple-alignments-buttons"),
                        b = document.getElementById("defline"),
                        c = document.getElementById("alignments-container");
                    c.removeChild(a), c.removeChild(b), html2canvas(c, {
                        onrendered: function(d) {
                            document.body.appendChild(d);
                            var e = document.createElement("a");
                            document.body.appendChild(e), e.href = d.toDataURL("img/png"), e.download = "alignments.png", e.click(), document.body.removeChild(d), document.body.removeChild(e), c.appendChild(b), c.appendChild(a)
                        }
                    })
                }

                function y(a, b, c, d) {
                    for (var e = document.getElementById(d.opt.multipleAlignments); e.hasChildNodes();) e.removeChild(e.firstChild);
                    var f = document.createElement("div"),
                        g = document.createElement("div"),
                        h = document.createElement("input"),
                        i = u(a, b, c, d),
                        j = v();
                    e.style.paddingTop = "20px", h.id = "defline", h.name = "defline", h.type = "text", h.value = " Mouse over to show defline and scores, click to show alignments", h.style.width = "556px", h.style.padding = "1px", h.style.border = 0, h.style.cursos = "auto", f.id = "alignments-container", f.style.border = "thin solid #DDD", f.style.margin = "0 auto", f.style.padding = "10px", f.style.maxWidth = "580px", f.style.backgroundColor = "#FFF", f = s(f, c, b), f = t(a, b, f, c), f.appendChild(h), g.style.textAlign = "right", g.id = "blast-multiple-alignments-buttons", e.style.minWidth = "580px", g.appendChild(i), g.appendChild(j), f.appendChild(g), e.appendChild(f)
                }

                function z() {
                    var a = document.createElement("table"),
                        b = document.createElement("thead"),
                        c = document.createElement("tr"),
                        d = document.createElement("th"),
                        d2 = document.createElement("th"),
                        e = document.createElement("th"),
                        f = document.createElement("th"),
                        g = document.createElement("th"),
                        h = document.createElement("th"),
                        i = document.createElement("th");
                    return a.className = "table table-striped", d.innerHTML = "Description".bold(), d2.innerHTML = "Locus".bold(), e.innerHTML = "Score".bold(), f.innerHTML = "E value".bold(), g.innerHTML = "Identities".bold(), h.innerHTML = "Positives".bold(), i.innerHTML = "Gaps".bold(), c.appendChild(d), c.appendChild(d2), c.appendChild(e), c.appendChild(f), c.appendChild(g), c.appendChild(h), c.appendChild(i), b.appendChild(c), a.appendChild(b), a
                }

                function A(a) {
                    var b = document.createElement("div"),
                        c = document.createElement("button"),
                        d = document.createElement("button");
                    return b.style.textAlign = "right", c.style.marginRight = "10px", c.className = "btn", c.innerHTML = "Download as csv", c.onclick = function() {
                        D(a)
                    }, d.className = "btn", d.innerHTML = "Download as image", d.onclick = function() {
                        C()
                    }, b.appendChild(c), b.appendChild(d), b
                }

                function B(a, b) {
                    for (var c = document.getElementById(b.opt.alignmentsTable); c.hasChildNodes();) c.removeChild(c.firstChild);
                    var d = document.createElement("div"),
                        e = A(a),
                        f = z(),
                        g = document.createElement("tbody");
                    c.style.paddingTop = "50px", d.style.backgroundColor = "#FFF", d.id = "blast-alignments-table-img";
                    for (var h = 0; h < a.length; h++) {
                        var i = document.createElement("tr"),
                            j = document.createElement("td"),
                            k = document.createElement("button");
                        k.alignment = a[h], k.onclick = function() {
                            b.opt.callback ? b.opt.callback(this.alignment) : (location.href = "#" + b.opt.singleAlignment, E(this.alignment, b))
                        }, k.id = a[h].description.split(" ")[1], k.innerHTML = a[h].description.split(" ").slice(2,20).join(" "), k.style.border = 0, k.style.padding = 0, k.style.display = "inline", k.style.background = "none", k.className = "alignment-table-description", j.appendChild(k);

                        var tt = document.createElement("td");
                        tt.innerHTML = '<a href="/chlamdb/locusx/' + b.opt.biodb + '/' + a[h].description.split(" ")[1] +  '/T">' + a[h].description.split(" ")[1] + '</a>';

                        var l = document.createElement("td");
                        l.innerHTML = a[h].score;
                        var m = document.createElement("td");
                        m.innerHTML = a[h].eValue;
                        var n = document.createElement("td");
                        n.innerHTML = a[h].identities + "%";
                        var o = document.createElement("td");
                        "N/A" == a[h].positives ? o.innerHTML = a[h].positives : o.innerHTML = a[h].positives + "%";
                        var p = document.createElement("td");
                        p.innerHTML = a[h].gaps + "%", i.appendChild(j), i.appendChild(tt), i.appendChild(l), i.appendChild(m), i.appendChild(n), i.appendChild(o), i.appendChild(p), g.appendChild(i)
                    }
                    f.appendChild(g), d.appendChild(f), c.appendChild(d), c.appendChild(e)
                }

                function C() {
                    var b, a = document.getElementsByClassName("alignment-table-description");
                    for (b = 0; b < a.length; b++) a[b].style.fontWeight = "normal", a[b].parentElement.parentElement.style.fontWeight = "normal";
                    var c = document.getElementById("blast-alignments-table-img");
                    html2canvas(c, {
                        onrendered: function(a) {
                            document.body.appendChild(a);
                            var b = document.createElement("a");
                            document.body.appendChild(b), b.href = a.toDataURL("img/png"), b.download = "alignments-table.png", b.click(), document.body.removeChild(a), document.body.removeChild(b)
                        }
                    })
                }

                function D(a) {
                    console.log("donwload!!!!")
                    var b = "data:text/csv;charset=utf-8,";
                    b += "Description;Locus; Score; eValue; Identities; Positives; Gaps\n";
                    for (var c = 0; c < a.length; c++) b += a[c].description, b += "; ", b += a[c].description.split(" ")[1], b += "; ",b += a[c].score, b += "; ", b += a[c].eValue, b += "; ", b += a[c].identities, b += "; ", b += a[c].positives, b += "; ", b += a[c].gaps, b += "\n";
                    console.log(b)
                    console.log("ok")
                    var d =  encodeURI(b),
                        e = document.createElement("a");
                    document.body.appendChild(e), e.setAttribute("href", d), e.setAttribute("download", "alignments-table.csv"), e.click()
                }

                function E(a, b) {
                    for (var c = document.getElementById(b.opt.singleAlignment); c.hasChildNodes();) c.removeChild(c.firstChild);
                    var d = document.createElement("pre"),
                        e = document.createElement("div"),
                        f = document.createElement("button"),
                        g = document.createElement("span"),
                        h = G(a.query, a.queryStart, a.queryEnd),
                        i = H(a.comparison),
                        j = I(a.subject, a.subjectStart, a.subjectEnd);
                    d.style.color = "#2c3e50", d.style.paddingTop = "25px", d.style.paddingBottom = "40px", d.style.textAlign = "left", d.style.fontFamily = "Helvetica,Arial,sans-serif", d.id = "blast-single-alignment-pre", e.style.margin = "0 auto", e.style.display = "table", e.style.paddingTop = "30px", c.style.textAlign = "right", c.style.paddingTop = "50px", f.className = "btn", f.innerHTML = "Download as image", f.onclick = function() {
                        F(a)
                    }, g.innerHTML = a.description, g.style.paddingLeft = "15px", g.style.fontWeight = "bold", g.style.fontSize = "15px", g.style.fontFamily = "Helvetica,Arial,sans-serif", e.appendChild(h), e.appendChild(i), e.appendChild(j), d.appendChild(g), d.appendChild(e), c.appendChild(d), c.appendChild(f)
                }

                function F(a) {
                    var b = document.getElementById("blast-single-alignment-pre");
                    html2canvas(b, {
                        onrendered: function(b) {
                            document.body.appendChild(b);
                            var c = document.createElement("a");
                            document.body.appendChild(c), c.href = b.toDataURL("img/png");
                            var d = a.description + "-alignment.png";
                            c.download = d, c.click(), document.body.removeChild(b), document.body.removeChild(c)
                        }
                    })
                }

                function G(a, b, c) {
                    var d = document.createElement("div"),
                        e = document.createElement("div"),
                        f = document.createElement("div"),
                        g = document.createElement("div");
                    d.innerHTML = "Query".bold(), d.style.display = "inline-block", d.style.marginRight = "20px", d.style.textAlign = "right", d.style.width = "55px", e.innerHTML = String(b).bold(), e.style.display = "inline-block", e.style.marginRight = "20px", e.style.width = "25px", f.innerHTML = String(c).bold(), f.style.display = "inline-block", f.style.marginLeft = "20px", f.style.marginRight = "70px", g.appendChild(d), g.appendChild(e);
                    for (var h = 0; h < a.length; h++) {
                        var i = document.createElement("div");
                        i.style.backgroundColor = J(a.charAt(h)), i.innerHTML = a.charAt(h).bold(), i.style.width = "18px", i.style.textAlign = "center", i.style.display = "inline-block", g.appendChild(i)
                    }
                    return g.appendChild(f), g
                }

                function H(a) {
                    var b = document.createElement("div"),
                        c = document.createElement("div");
                    c.style.minWidth = "120px", c.style.minHeight = "1px", c.style.display = "inline-block", b.appendChild(c);
                    for (var d = 0; d < a.length; d++) {
                        var e = document.createElement("div");
                        e.style.backgroundColor = J(a.charAt(d)), e.innerHTML = a.charAt(d).bold(), e.style.width = "18px", e.style.textAlign = "center", e.style.display = "inline-block", b.appendChild(e)
                    }
                    return b
                }

                function I(a, b, c) {
                    var d = document.createElement("div"),
                        e = document.createElement("div"),
                        f = document.createElement("div"),
                        g = document.createElement("div");
                    d.innerHTML = "Subject".bold(), d.style.display = "inline-block", d.style.textAlign = "right", d.style.marginRight = "20px", d.style.width = "55px", e.style.width = "25px", e.innerHTML = String(b).bold(), e.style.display = "inline-block", e.style.marginRight = "20px", f.innerHTML = String(c).bold(), f.style.display = "inline-block", f.style.marginLeft = "20px", f.style.marginRight = "70px", g.appendChild(d), g.appendChild(e);
                    for (var h = 0; h < a.length; h++) {
                        var i = document.createElement("div");
                        i.style.backgroundColor = J(a.charAt(h)), i.innerHTML = a.charAt(h).bold(), i.style.width = "18px", i.style.textAlign = "center", i.style.display = "inline-block", g.appendChild(i)
                    }
                    return g.appendChild(f), g
                }

                function J(a) {
                    switch (a) {
                        case "A":
                            return "#DBFA60";
                        case "C":
                            return "#F9FA60";
                        case "D":
                            return "#F9605F";
                        case "E":
                            return "#F9609C";
                        case "F":
                            return "#5FF99D";
                        case "G":
                            return "#F9BC5F";
                        case "H":
                            return "#609DF9";
                        case "I":
                            return "#99F95A";
                        case "K":
                            return "#A062FF";
                        case "L":
                            return "#7EF960";
                        case "M":
                            return "#63FF63";
                        case "N":
                            return "#D95DF9";
                        case "P":
                            return "#F9DA60";
                        case "Q":
                            return "#F955D8";
                        case "R":
                            return "#5360FB";
                        case "S":
                            return "#F97E60";
                        case "T":
                            return "#FFA563";
                        case "V":
                            return "#C0F86B";
                        case "W":
                            return "#FDD9F9";
                        case "Y":
                            return "#60F9DA";
                        default:
                            return "#FFFFFF"
                    }
                }
                if (window.File && window.FileReader && window.FileList && window.Blob) {
                    var c = a.target.files[0];
                    if (c) {
                        var d = new FileReader;
                        d.onload = function(a) {
                            var c = f(a.target.result),
                                d = g(a.target.result);
                            y(d, c, !0, b), B(d, b), E(d[0], b)
                        }, d.readAsText(c)
                    } else alert("Failed to load file")
                } else alert("The File APIs are not fully supported by your browser.");
                String.prototype.startsWith = function(a) {
                    return 0 === this.indexOf(a)
                }
            }
        })
    }, {
        "js-class": 1,
        "js-extend": 2
    }]
}, {}, []);
